<?xml version="1.0" encoding="UTF-8"?>
<beans 
xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:security="http://www.springframework.org/schema/security"
xsi:schemaLocation="http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="customLoginSuccess" class="com.firstgroup.movies.security.CustomLoginSuccessHandler"></bean>
	<bean id="customAccessDenied" class="com.firstgroup.movies.security.CustomAccessDeniedHandler"></bean>
	<bean id="customPasswordEncoder" class="com.firstgroup.movies.security.CustomNoOpPasswordEncoder"></bean>
	
	<security:http>
		<security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
		<!-- 접근 거부시 -->
		<security:access-denied-handler ref="customAccessDenied"/>
		<!-- 로그인 페이지 인터셉트 경로 -->
		<security:form-login login-page="/loginAuth"/>
		<security:logout logout-url="/home" invalidate-session="true" />
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select id , pw, enabled from tbl_member where id = ?"
			authorities-by-username-query="select id, auth from tbl_member_auth where id = ? "/>
			<security:password-encoder ref="customPasswordEncoder"/>
<!-- 			<security:user-service>
				임시 계정 생성
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER" />
				<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/>
			</security:user-service> -->
		</security:authentication-provider>
	</security:authentication-manager>
</beans>